{"version":3,"sources":["components/data.js","components/UserTodos.js","components/UserTodoList.js","components/TodoList.js","App.js","index.js"],"names":["ApiUrl","getUsers","fetch","concat","then","response","json","getTodos","UserTodos","props","_props$todo","todo","id","completed","title","react_default","a","createElement","className","htmlFor","name","type","checked","onChange","handleCheckBox","UserTodoList","state","isCommentsShown","handleShowComments","_this","setState","prevState","_this2","this","_this$props$user","user","username","email","phone","userTodos","usertodos","map","src_components_UserTodos","key","onClick","style","display","handleSortClickTodos","React","Component","TodoList","isLoading","isServerLoading","sortUsersByName","sortTodoByDone","users","todos","handleClick","_callee","regenerator_default","wrap","_context","prev","next","t0","t1","sent","t2","t3","call","stop","event","_event$target","target","item","handleSortClick","Object","toConsumableArray","sort","userA","userB","localeCompare","todoA","todoB","usersTodoLists","objectSpread","filter","userId","src_components_UserTodoList","loader","loadButton","backgroundColor","Fragment","App","src_components_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.29c56a06.chunk.js","sourcesContent":["const ApiUrl = 'https://jsonplaceholder.typicode.com';\n\nexport const getUsers = () => fetch(`${ApiUrl}/users`)\n  .then(response => response.json());\n\nexport const getTodos = () => fetch(`${ApiUrl}/todos`)\n  .then(response => response.json());\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserTodos.css';\n\nconst UserTodos = (props) => {\n  const { id, completed, title } = props.todo;\n\n  return (\n    <li>\n      <label\n        className={props.todo.completed ? 'todo__label' : null}\n        htmlFor=\"checkbox\"\n      >\n        <input\n          name={id}\n          type=\"checkbox\"\n          checked={completed}\n          onChange={props.handleCheckBox}\n        />\n        {title}\n      </label>\n    </li>\n  );\n};\n\nUserTodos.propTypes = {\n  handleCheckBox: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n    title: PropTypes.string,\n  }).isRequired,\n};\n\nexport default UserTodos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './UserTodoList.css';\nimport UserTodos from './UserTodos';\n\nclass UserTodoList extends React.Component {\n  state={\n    isCommentsShown: false,\n  }\n\n  handleShowComments = () => {\n    this.setState(prevState => ({\n      isCommentsShown: !prevState.isCommentsShown,\n    }));\n  }\n\n  render() {\n    const {\n      username, email, phone, usertodos,\n    } = this.props.user;\n\n    const userTodos = usertodos\n      .map(todo => (\n        <UserTodos\n          key={todo.id}\n          todo={todo}\n          handleCheckBox={this.props.handleCheckBox}\n        />\n      ));\n\n    return (\n      <div className=\"user\">\n        <div className=\"user__block\">\n          <h3 className=\"user-info user-info__header\">\n          Username:\n            {' '}\n            {username}\n          </h3>\n\n          <p\n            className=\"user-info user-info__additional user-info__email\"\n          >\n            {email}\n          </p>\n\n          <p\n            className=\"user-info user-info__additional user-info__phone\"\n          >\n            {phone}\n          </p>\n        </div>\n\n        <div className=\"todos--header\">\n          <h2>Todos</h2>\n          <button\n            onClick={this.handleShowComments}\n            className=\"button--link\"\n            type=\"button\"\n          >\n            {this.state.isCommentsShown ? 'Hide Todos' : 'Show Todos'}\n          </button>\n        </div>\n\n        <div\n          className=\"todos\"\n          style={{\n            display: this.state.isCommentsShown ? 'block' : 'none',\n          }}\n        >\n          <ul className=\"todos__list\">\n            {userTodos}\n          </ul>\n\n          <div className=\"todos__button-container\">\n            <button\n              onClick={this.props.handleSortClickTodos}\n              className=\"button--link\"\n              type=\"button\"\n            >\n            Sort by Done\n            </button>\n\n            <button\n              onClick={this.props.handleSortClickTodos}\n              name=\"titleSort\"\n              className=\"button--link\"\n              type=\"button\"\n            >\n              Sort by Title\n            </button>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nUserTodoList.propTypes = {\n  handleSortClickTodos: PropTypes.func.isRequired,\n  handleCheckBox: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    username: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n    usertodos: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default UserTodoList;\n","import React from 'react';\nimport './TodoList.css';\nimport { getUsers, getTodos } from './data';\nimport UserTodoList from './UserTodoList';\n\nclass TodoList extends React.Component {\n  state={\n    isLoading: true,\n    isServerLoading: false,\n    sortUsersByName: 1,\n    sortTodoByDone: 1,\n    users: [],\n    todos: [],\n  }\n\n  handleClick = async() => {\n    this.setState(prevState => ({\n      isServerLoading: !prevState.isServerLoading,\n    }));\n\n    this.setState({\n      users: await getUsers(),\n      todos: await getTodos(),\n    });\n\n    this.setState(prevState => ({\n      isLoading: !prevState.isLoading,\n      isServerLoading: !prevState.isServerLoading,\n    }));\n  }\n\n  handleCheckBox = (event) => {\n    const { name, checked } = event.target;\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map((item) => {\n        if (item.id === +name) {\n          item.completed = checked;\n        }\n        return item;\n      }),\n    }));\n  }\n\n  handleSortClick = () => {\n    const { users } = this.state;\n    this.setState(prevState => ({\n      users: [...users].sort((userA, userB) => (\n        prevState.sortUsersByName\n        * userA.username.localeCompare(userB.username))),\n      sortUsersByName: -prevState.sortUsersByName,\n    }));\n  }\n\n  handleSortClickTodos = (event) => {\n    const { name } = event.target;\n    const { todos } = this.state;\n\n    if (name === 'titleSort') {\n      this.setState(prevState => ({\n        todos: [...todos].sort((todoA, todoB) => (\n          prevState.sortTodoByDone * todoA.title.localeCompare(todoB.title))),\n        sortTodoByDone: -prevState.sortTodoByDone,\n      }));\n    } else {\n      this.setState(prevState => ({\n        todos: [...todos].sort((todoA, todoB) => (\n          prevState.sortTodoByDone * (todoA.completed - todoB.completed))),\n        sortTodoByDone: -prevState.sortTodoByDone,\n      }));\n    }\n  }\n\n  render() {\n    const userWithOwnTodos = this.state.users.map(user => (\n      {\n        ...user,\n        usertodos: this.state.todos.filter(todo => todo.userId === user.id),\n      }\n    ));\n\n    const usersTodoLists = userWithOwnTodos\n      .map(user => (\n        <UserTodoList\n          key={user.id}\n          user={user}\n          handleCheckBox={this.handleCheckBox}\n          handleSortClickTodos={this.handleSortClickTodos}\n          handleSortClick={this.handleSortClick}\n        />\n      ));\n\n    const loader = this.state.isServerLoading && <div className=\"loader\" />;\n\n    const loadButton = this.state.isServerLoading\n      || (\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.handleClick}\n          style={{ backgroundColor: !this.state.isLoading && '#000' }}\n        >\n          {this.state.isLoading ? 'Load Todos' : 'Hide Todos'}\n        </button>\n      );\n\n    const display = this.state.isServerLoading\n      || this.state.isLoading\n      || (\n      <>\n        <button\n          className=\"button--link\"\n          onClick={this.handleSortClick}\n          type=\"button\"\n        >\n            Sort users by UserName\n        </button>\n\n        {usersTodoLists}\n      </>\n      );\n\n    return (\n      <div>\n        {loader}\n        {display}\n        {loadButton}\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\n\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"AppContainer\">\n      <div className=\"App\">\n        <h1>Dynamic list of todos</h1>\n        <TodoList />\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}